<h1>Success!</h1>

<p>Congratulations, you have logged into your new account!</p>
<p>
    The next step will be to visit your profile page now that you've logged in, but that
    might be trickier than you think.
</p>

<p>
    At its core, HTTP is known as a "stateless" protocol. By itself, HTTP forgets everything
    it knows about you between requests. Think of every HTTP request you send to a server as
    the server meeting you for the first time.
</p>

<p>
    This is a problem when we want to use a site that requires us to login. If the server
    forgets who we are between requests, how can it know who we are as we move through the
    site? Are we going to have to login <em>again</em> just to view our profile page?
</p>

<p>
    Luckily, we have a mechanism for this! Notice the 'Set-Cookie' header in the response
    you've received. This is the server handing you a ticket of sorts. In this case, the server
    has given you a cookie that contains information about who you are, specifically, that you
    are user <%= user.id %>. This is <em>your</em> cookie, just for you. No one else should have it.
</p>

<p>
    The next time you make a request to the server, you should <em>hand that cookie back</em>.
    If you do, the server will read the cookie you've sent and be able to determine that you must
    be user <%= user.id %>. It's a way of you reminding the server of who you are everytime you
    meet it.
</p>

<p>
    To send the cookie to the server, simply use the "Cookie" header in your request. For
    example: <code>Cookie: cookieyougaveme=delicious</code>.
</p>

<p>Follow this redirect to the the profile page, and make sure you let the server know who you are when you make the request.</p>
