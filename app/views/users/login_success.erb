<h1>Success!</h1>

<p>Congratulations, you have logged into your new account!</p>
<p>
    The next step will be to visit your profile page, /profile, now that you've logged in,
    but when you make that GET request, how will the server know who you are?
</p>

<p>
    At its core, HTTP is known as a "stateless" protocol. By itself, HTTP forgets everything
    it knows about you between requests. Think of every HTTP request you send to a server as
    the server meeting you for the first time.
</p>

<p>
    This is a problem when we want to use a site that requires us to login. If the server
    forgets who we are between requests, how can it know who we are as we move through the
    site? Are we going to have to login again just to view our profile page?
    That would certainly be a pain.
</p>

<p>
    Luckily, we have a mechanism for this. Notice the 'Set-Cookie' header in the response
    you've received. This is the server handing you a ticket of sorts. It contains information
    about who you are, specifically, that you are user <%= user.id >. The next time you make a
    request to the server, you should <em>hand that cookie back</em>. If you do, the server will
    read the cookie you've sent and be able to determine that you must be user <%= user.id %>.
    The cookie keeps track of your identity across multiple requests. It's a way of you reminding
    the server of who you are everytime you meet it.
</p>

<p>
    To send the cookie to the server, simply use the "Cookie" header in your request. For
    example: <code>Cookie: cookieyougaveme=delicious</code>.
</p>

<p>Follow this redirect to the /profile page, and make sure you let the server know who you are when you make the request.</p>
